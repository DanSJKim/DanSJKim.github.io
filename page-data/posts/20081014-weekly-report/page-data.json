{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/20081014-weekly-report","result":{"data":{"markdownRemark":{"id":"7edfef61-9d09-5bc1-a195-4d7a068667d1","html":"<h1 id=\"weekly\" style=\"position:relative;\"><a href=\"#weekly\" aria-label=\"weekly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Weekly</h1>\n<ul>\n<li>관리자 기획전 페이지 매핑상품 검색기능 추가건 개발 완료 및 검토</li>\n<li>옴니어스 응답대기 이슈 개선 curl -> socket</li>\n<li>Python Tuple 스터디</li>\n<li>MySQL Index 스터디</li>\n</ul>\n<h1 id=\"tips\" style=\"position:relative;\"><a href=\"#tips\" aria-label=\"tips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tips</h1>\n<p>기본적인 내용들도 있지만 사수분이 팁으로 알려주시거나 직접 깨달은것들은 따로 정리해두지 않으면 결국 다 까먹는다는것을 깨달았다..</p>\n<p>앞으로 사소한것들이라도 주단위로 기록할 계획이다. 기록하고싶은 코드는 별도 작성 예정</p>\n<h2 id=\"general\" style=\"position:relative;\"><a href=\"#general\" aria-label=\"general permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>General</h2>\n<ul>\n<li>UI, API 동시에 구현할 때 UI쪽부터 개발하는게 낫다. DB 값을 바꾸면서 화면의 변경사항을 확인 하고 값이 잘 나타나면 그 구조에 맞춰서 API를 개발하자.</li>\n</ul>\n<h2 id=\"mysql\" style=\"position:relative;\"><a href=\"#mysql\" aria-label=\"mysql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL</h2>\n<ul>\n<li>eq-ref 생각해서 조인하기!!</li>\n<li>\n<p>string equal이 내부적으로 동작하는 방법</p>\n<ul>\n<li>string은 문자 하나하나 비교해야한다. 그러기 위해서 문자를 아스키코드로 변환해서 일일이 비교하는 과정이 필요하기 때문에 성능 비용이 많이 발생한다.</li>\n</ul>\n</li>\n<li>\n<p>datetime형을 equal하면 어떤 일이 발생하는가</p>\n<ul>\n<li>datetime은 의외로 비용이 들지 않는다. 날짜는 1970년(정확하지 않음)부터 현재까지를 숫자로 저장하기 때문에 숫자끼리 값의 크기를 비교하면 된다.</li>\n</ul>\n</li>\n<li>인덱스 스터디 내용 별도 작성</li>\n</ul>\n<h2 id=\"vue\" style=\"position:relative;\"><a href=\"#vue\" aria-label=\"vue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue</h2>\n<ul>\n<li>Vue 라이프사이클 객체간의 관계 설계 방법 필수적으로 배워두기</li>\n<li>UI 통일할 예정. 주문 쪽 UI처럼</li>\n<li>Vuex 이용해서 세션 관리도 할 예정</li>\n<li>\n<p>어떻게 해야 가독성이 높은 컴포넌트와 효율성을 올릴 수 있을까?</p>\n<p><strong>컴포넌트화 해야 하는 부분을 명확하게 나눠야 한다.</strong></p>\n<p>A라는 부분이 N개의 페이지에서 사용하는 공통적인 항목이라면 컴포넌트로 분리해야하는 것이 바람직하다. 그리고</p>\n<p><strong>컴포넌트화 해야 하는 덩어리(chunk)를 굳이 세분화해서 나눌 필요는 없다.</strong></p>\n<p>우리는 컴포넌트를 작성할 때 과감하게 큰 chunk 단위로 나눌 필요도 있다.</p>\n<p>[Form Input Bindings - Vue.js</p>\n</li>\n</ul>\n<h2 id=\"python\" style=\"position:relative;\"><a href=\"#python\" aria-label=\"python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># except 확인하고 싶을 떄 try 강제로 except로 빼기</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'예외 발생'</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span>\n    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"php\" style=\"position:relative;\"><a href=\"#php\" aria-label=\"php permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PHP</h2>\n<p>python과 다르게 php curl은 connection timeout과 readtimeout을 별도로 구분하지 않는 문제가 있다.</p>\n<p>Php에서 readtimeout을 사용하기 위해서는 socket통신을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token function\">stream_context_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">stream_socket_client</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$domain</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errno</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errstr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$timeout</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">STREAM_CLIENT_CONNECT</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">stream_set_timeout</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// readtimeout (second, nano second)</span>\n<span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fread를 해주지 않으면 readtimeout이 동작하지 않는다.</span>\n<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"git\" style=\"position:relative;\"><a href=\"#git\" aria-label=\"git permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git</h2>\n<ul>\n<li>\n<p>다른사람의 코드를 바로 pull할 때는 충돌이 나고 stash후에 pull하고 stash를 다시 받을 때 충돌이 안나는 이유?</p>\n<ul>\n<li>pull을 할 때는 파일의 충돌을 검사하기 때문에 내가 같은 파일을 변경했다면 코드가 겹치지 않아도 충돌이 난다.</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/20081014-weekly-report","tagSlugs":["/tag/weekly/","/tag/wecode/","/tag/tips/"]},"frontmatter":{"date":"2020-08-10T16:09:32.169Z","description":"8월 둘째주 정리","tags":["weekly","wecode","tips"],"title":"200810-200814 | 8월 둘째주 Report","socialImage":"https://i.kym-cdn.com/entries/icons/facebook/000/019/513/til.jpg"}}},"pageContext":{"slug":"/posts/20081014-weekly-report"}}}