{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/quick-sort","result":{"data":{"markdownRemark":{"id":"6d116dec-1f6f-512f-8f26-b91b0af750b7","html":"<h1 id=\"퀵-정렬\" style=\"position:relative;\"><a href=\"#%ED%80%B5-%EC%A0%95%EB%A0%AC\" aria-label=\"퀵 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>퀵 정렬</h1>\n<ul>\n<li>분할 정복 방법을 통해 리스트를 정렬한다.</li>\n</ul>\n<h2 id=\"구현-방법\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95\" aria-label=\"구현 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현 방법</h2>\n<ul>\n<li>리스트 개수가 한개면 해당 리스트를 그대로 리턴 한다.</li>\n<li>그렇지 않으면, 리스트의 맨 앞 원소를 pivot으로 지정한다.</li>\n<li>left, right 리스트 변수를 만든다.</li>\n<li>맨 앞의 데이터를 제외한 나머지 데이터를 pivot과 비교한다.</li>\n<li>pivot보다 작으면 left 리스트에 원소를 저장한다.</li>\n<li>pivot보다 크거나 같으면 right 리스트에 원소를 저장한다.</li>\n<li>\n<p>분할된 두 개의 리스트에 대해 재귀적으로 이 과정을 반복한다.</p>\n<ul>\n<li>return quickSort(left) + [pivot] + quickSort(right)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">qsort</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> data\n    \n    left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pivot <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> pivot <span class=\"token operator\">></span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            left<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            right<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> qsort<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> qsort<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\ndata_list <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\nqsort<span class=\"token punctuation\">(</span>data_list<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>파이써닉하게 구현하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">qsort</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> data\n    \n    pivot <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    left <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> item <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> pivot <span class=\"token operator\">></span> item <span class=\"token punctuation\">]</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> item <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> pivot <span class=\"token operator\">&lt;=</span> item <span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">return</span> qsort<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> qsort<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\ndata_list <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\nqsort<span class=\"token punctuation\">(</span>data_list<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"알고리즘-분석\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EC%84%9D\" aria-label=\"알고리즘 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분석</h2>\n<ul>\n<li>\n<p>시간복잡도는 O(n log n)</p>\n<ul>\n<li>pivot 왼쪽 오른쪽으로 1/2씩 나눠진다고 한다면 log n 만큼의 단계가 생성 된다.</li>\n<li>각 단계 별로 n 만큼 피벗과 비교한다.</li>\n</ul>\n</li>\n<li>\n<p>최악의 경우 O(n2)</p>\n<ul>\n<li>맨 처음 pivot이 가장 크거나 가장 작은 경우 모든 데이터를 비교하는 상황이 나온다.</li>\n<li>독특한 경우이기 때문에 일반적으로 n log n 으로 표기한다.</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/quick-sort","tagSlugs":["/tag/recursive/"]},"frontmatter":{"date":"2020-10-02T16:09:32.169Z","description":"퀵 정렬 이해 하기","tags":["recursive"],"title":"[알고리즘]퀵 정렬","socialImage":"https://i.kym-cdn.com/entries/icons/facebook/000/019/513/til.jpg"}}},"pageContext":{"slug":"/posts/quick-sort"}}}