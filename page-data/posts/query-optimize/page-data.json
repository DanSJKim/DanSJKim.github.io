{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/query-optimize","result":{"data":{"markdownRemark":{"id":"fd7098c6-8d52-51c4-9082-1cbd5b711972","html":"<h1 id=\"쿼리-최적화\" style=\"position:relative;\"><a href=\"#%EC%BF%BC%EB%A6%AC-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"쿼리 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿼리 최적화</h1>\n<p>애플리케이션에서 데이터를 저장, 조회하기 위해 데이터베이스와 통신할 때 데이터베이스 서버로 전달되는 것은 SQL 뿐이다. SQL은 <strong>어떠한(What)</strong> 데이터를 요청하기 위한 언어지, <strong>어떻게(How)</strong> 데이터를 읽을지 표현하는 언어는 아니므로 C, 자바와 같은 언어와 비교했을 때 상당히 제한적으로 느껴질 수 있다.</p>\n<p>하지만 쿼리가 빠르게 수행되게 하려면 쿼리가 어떻게 데이터를 가져올 지 예측할 수 있어야 한다.</p>\n<p>그래서 SQL을 작성하는 방법과 규칙은 물론, 내부적인 처리 방식<strong>(옵티마이저)</strong> 에 어느정도 지식이 필요하다.</p>\n<p>애플리케이션 코드를 튜닝해서 성능을 2배 개선하는 것은 쉽지 않은 일이지만, DBMS에서 몇십 배 몇백 배 성능 향상은 상당히 흔한 일이다.</p>\n<p>SQL 처리에서 “어떻게(How)” 를 이해하고 쿼리를 작성하는 것이 그만큼 중요하다는 의미다.</p>\n<h3 id=\"select-시-꼭-필요한-컬럼만-불러-온다\" style=\"position:relative;\"><a href=\"#select-%EC%8B%9C-%EA%BC%AD-%ED%95%84%EC%9A%94%ED%95%9C-%EC%BB%AC%EB%9F%BC%EB%A7%8C-%EB%B6%88%EB%9F%AC-%EC%98%A8%EB%8B%A4\" aria-label=\"select 시 꼭 필요한 컬럼만 불러 온다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELECT 시 꼭 필요한 컬럼만 불러 온다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">-- X\nSELECT * FROM movie; \n-- O\nSELECT id FROM movie;</code></pre></div>\n<p>많은 필드 값을 불러올 수록 데이터베이스는 더 많은 로드를 부담하기 때문에 꼭 필요한 컬럼만 불러오는 것이 좋다.</p>\n<h3 id=\"조건-부여-시-가급적이면-기존-db-값에-별도의-연산을-걸지-않는다\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4-%EB%B6%80%EC%97%AC-%EC%8B%9C-%EA%B0%80%EA%B8%89%EC%A0%81%EC%9D%B4%EB%A9%B4-%EA%B8%B0%EC%A1%B4-db-%EA%B0%92%EC%97%90-%EB%B3%84%EB%8F%84%EC%9D%98-%EC%97%B0%EC%82%B0%EC%9D%84-%EA%B1%B8%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\" aria-label=\"조건 부여 시 가급적이면 기존 db 값에 별도의 연산을 걸지 않는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건 부여 시, 가급적이면 기존 DB 값에 별도의 연산을 걸지 않는다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">-- X\nSELECT m.id, ANY_VALUE(m.title) title, COUNT(r.id) r_count \nFROM movie m \nINNER JOIN rating r \nON m.id = r.movie_id \nWHERE FLOOR(r.value/2) = 2 \nGROUP BY m.id;\n-- O\nSELECT m.id, ANY_VALUE(m.title) title, COUNT(r.id) r_count \nFROM movie m \nINNER JOIN rating r \nON m.id = r.movie_id \nWHERE r.value BETWEEN 4 AND 5 \nGROUP BY m.id;</code></pre></div>\n<p>상단의 쿼리는 Full Table Scan을 하면서 모든 셀을 탐색하고 수식을 건 뒤에 조건 충족 여부를 판단해야 한다.</p>\n<h3 id=\"like사용-시-와일드카드-문자열을-string-앞부분에는-배치하지-않는-것이-좋다\" style=\"position:relative;\"><a href=\"#like%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-string-%EC%95%9E%EB%B6%80%EB%B6%84%EC%97%90%EB%8A%94-%EB%B0%B0%EC%B9%98%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%A2%8B%EB%8B%A4\" aria-label=\"like사용 시 와일드카드 문자열을 string 앞부분에는 배치하지 않는 것이 좋다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LIKE사용 시 와일드카드 문자열(%)을 String 앞부분에는 배치하지 않는 것이 좋다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">-- Inefficient\nSELECT g.value genre, COUNT(r.movie_id) r_cnt \nFROM rating r \nINNER JOIN genre g \nON r.movie_id = g.movie_id \nWHERE g.value LIKE &quot;%Comedy&quot;  \nGROUP BY g.value;\n-- Improved(1): value IN (...)\nSELECT g.value genre, COUNT(r.movie_id) r_cnt \nFROM rating r \nINNER JOIN genre g \nON r.movie_id = g.movie_id \nWHERE g.value IN (&quot;Romantic Comedy&quot;, &quot;Comedy&quot;) \nGROUP BY g.value;\n-- Improved(2): value = &quot;...&quot;\nSELECT g.value genre, COUNT(r.movie_id) r_cnt \nFROM rating r \nINNER JOIN genre g \nON r.movie_id = g.movie_id \nWHERE g.value = &quot;Romantic Comedy&quot; OR g.value = &quot;Comedy&quot;\nGROUP BY g.value;\n-- Improved(3): value LIKE &quot;...%&quot;\n-- 모든 문자열을 탐색할 필요가 없어서 가장 좋은 성능을 냄\nSELECT g.value genre, COUNT(r.movie_id) r_cnt \nFROM rating r \nINNER JOIN genre g \nON r.movie_id = g.movie_id \nWHERE g.value LIKE &quot;Romantic%&quot; OR g.value LIKE &quot;Comed%&quot;\nGROUP BY g.value;</code></pre></div>\n<p>이전 예시와 마찬가지로 <code class=\"language-text\">value LIKE &quot;%...&quot;</code> 는 Full Table Scan으로 조건 충족 여부를 판단해야 한다.</p>\n<h3 id=\"select-distinct-union-distinct와-같이-중복-값을-제거하는-연산은-최대한-사용하지-않아야-한다\" style=\"position:relative;\"><a href=\"#select-distinct-union-distinct%EC%99%80-%EA%B0%99%EC%9D%B4-%EC%A4%91%EB%B3%B5-%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EB%8A%94-%EC%97%B0%EC%82%B0%EC%9D%80-%EC%B5%9C%EB%8C%80%ED%95%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"select distinct union distinct와 같이 중복 값을 제거하는 연산은 최대한 사용하지 않아야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELECT DISTINCT, UNION DISTINCT와 같이 중복 값을 제거하는 연산은 최대한 사용하지 않아야 한다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">-- Inefficient\nSELECT DISTINCT m.id, title \nFROM movie m  \nINNER JOIN genre g \nON m.id = g.movie_id;\n-- Improved\nSELECT m.id, title \nFROM movie m  \nWHERE EXISTS (SELECT &#39;X&#39; FROM rating r WHERE m.id = r.movie_id);</code></pre></div>\n<h3 id=\"같은-내용의-조건이라면-group-by-연산-시에는-가급적-having보다는-where-절을-사용하는-것이-좋다\" style=\"position:relative;\"><a href=\"#%EA%B0%99%EC%9D%80-%EB%82%B4%EC%9A%A9%EC%9D%98-%EC%A1%B0%EA%B1%B4%EC%9D%B4%EB%9D%BC%EB%A9%B4-group-by-%EC%97%B0%EC%82%B0-%EC%8B%9C%EC%97%90%EB%8A%94-%EA%B0%80%EA%B8%89%EC%A0%81-having%EB%B3%B4%EB%8B%A4%EB%8A%94-where-%EC%A0%88%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%A2%8B%EB%8B%A4\" aria-label=\"같은 내용의 조건이라면 group by 연산 시에는 가급적 having보다는 where 절을 사용하는 것이 좋다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>같은 내용의 조건이라면, GROUP BY 연산 시에는 가급적 HAVING보다는 WHERE 절을 사용하는 것이 좋다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">-- Inefficient\nSELECT m.id, COUNT(r.id) AS rating_cnt, AVG(r.value) AS avg_rating \nFROM movie m  \nINNER JOIN rating r \nON m.id = r.movie_id \nGROUP BY id \nHAVING m.id &gt; 1000;\n-- Improved\nSELECT m.id, COUNT(r.id) AS rating_cnt, AVG(r.value) AS avg_rating \nFROM movie m  \nINNER JOIN rating r \nON m.id = r.movie_id \nWHERE m.id &gt; 1000\nGROUP BY id ;</code></pre></div>\n<h3 id=\"3개-이상의-테이블을-inner-join-할-때는-크기가-가장-큰-테이블을-from-절에-배치하고-inner-join-절에는-남은-테이블을-작은-순서대로-배치하는-것이-좋다\" style=\"position:relative;\"><a href=\"#3%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-inner-join-%ED%95%A0-%EB%95%8C%EB%8A%94-%ED%81%AC%EA%B8%B0%EA%B0%80-%EA%B0%80%EC%9E%A5-%ED%81%B0-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-from-%EC%A0%88%EC%97%90-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B3%A0-inner-join-%EC%A0%88%EC%97%90%EB%8A%94-%EB%82%A8%EC%9D%80-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%9E%91%EC%9D%80-%EC%88%9C%EC%84%9C%EB%8C%80%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%A2%8B%EB%8B%A4\" aria-label=\"3개 이상의 테이블을 inner join 할 때는 크기가 가장 큰 테이블을 from 절에 배치하고 inner join 절에는 남은 테이블을 작은 순서대로 배치하는 것이 좋다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3개 이상의 테이블을 INNER JOIN 할 때는, 크기가 가장 큰 테이블을 FROM 절에 배치하고, INNER JOIN 절에는 남은 테이블을 작은 순서대로 배치하는 것이 좋다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"mysql\"><pre class=\"language-mysql\"><code class=\"language-mysql\">-- Query (A)\nSELECT m.title, r.value rating, g.value genre \nFROM rating r \nINNER JOIN genre g \nON g.movie_id = r.movie_id  \nINNER JOIN movie m \nON m.id = r.movie_id;\n-- Query (B)\nSELECT m.title, r.value rating, g.value genre \nFROM rating r \nINNER JOIN movie m\nON r.movie_id = m.id \nINNER JOIN genre g \nON r.movie_id = g.movie_id;</code></pre></div>\n<h3 id=\"자주-사용하는-데이터의-형식에-대해서는-미리-전처리된-테이블을-따로-보관관리하는-것도-좋다\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%ED%98%95%EC%8B%9D%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C%EB%8A%94-%EB%AF%B8%EB%A6%AC-%EC%A0%84%EC%B2%98%EB%A6%AC%EB%90%9C-%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-%EB%94%B0%EB%A1%9C-%EB%B3%B4%EA%B4%80%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EA%B2%83%EB%8F%84-%EC%A2%8B%EB%8B%A4\" aria-label=\"자주 사용하는 데이터의 형식에 대해서는 미리 전처리된 테이블을 따로 보관관리하는 것도 좋다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자주 사용하는 데이터의 형식에 대해서는 미리 전처리된 테이블을 따로 보관/관리하는 것도 좋다.</h3>\n<h3 id=\"order-by는-연산-중간에-사용하지-않는다\" style=\"position:relative;\"><a href=\"#order-by%EB%8A%94-%EC%97%B0%EC%82%B0-%EC%A4%91%EA%B0%84%EC%97%90-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\" aria-label=\"order by는 연산 중간에 사용하지 않는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORDER BY는 연산 중간에 사용하지 않는다.</h3>\n<h3 id=\"limit를-활용한다\" style=\"position:relative;\"><a href=\"#limit%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"limit를 활용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LIMIT를 활용한다.</h3>\n<p>참고: <a href=\"https://medium.com/watcha/%EC%BF%BC%EB%A6%AC-%EC%B5%9C%EC%A0%81%ED%99%94-%EC%B2%AB%EA%B1%B8%EC%9D%8C-%EB%B3%B4%EB%8B%A4-%EB%B9%A0%EB%A5%B8-%EC%BF%BC%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-7%EA%B0%80%EC%A7%80-%EC%B2%B4%ED%81%AC-%EB%A6%AC%EC%8A%A4%ED%8A%B8-bafec9d2c073\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a></p>","fields":{"slug":"/posts/query-optimize","tagSlugs":["/tag/recursive/"]},"frontmatter":{"date":"2020-10-05T16:09:32.169Z","description":"쿼리 최적화 알아보기","tags":["recursive"],"title":"[MySQL] 쿼리 최적화","socialImage":"https://i.kym-cdn.com/entries/icons/facebook/000/019/513/til.jpg"}}},"pageContext":{"slug":"/posts/query-optimize"}}}