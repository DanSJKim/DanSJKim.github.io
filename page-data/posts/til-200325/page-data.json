{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-200325","result":{"data":{"markdownRemark":{"id":"d20f31fa-58ed-5dc1-ab6e-92d8c31290af","html":"<h1 id=\"til-57일차--브랜디-기업-협업-3일차\" style=\"position:relative;\"><a href=\"#til-57%EC%9D%BC%EC%B0%A8--%EB%B8%8C%EB%9E%9C%EB%94%94-%EA%B8%B0%EC%97%85-%ED%98%91%EC%97%85-3%EC%9D%BC%EC%B0%A8\" aria-label=\"til 57일차  브랜디 기업 협업 3일차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL 57일차 | 브랜디 기업 협업 3일차</h1>\n<ul>\n<li>09:30 | Brandi 클론 프로젝트 초기세팅</li>\n<li>17:00 | 리뷰</li>\n</ul>\n<h2 id=\"오늘-한-일\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98-%ED%95%9C-%EC%9D%BC\" aria-label=\"오늘 한 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘 한 일</h2>\n<ul>\n<li>webpack 내용 블로깅</li>\n</ul>\n<p><img src=\"https://joshua1988.github.io/webpack-guide/guide.html\" alt=\"참고자료\"></p>\n<ul>\n<li>\n<p>Brandi 클론 프로젝트 초기세팅</p>\n<ul>\n<li>react</li>\n<li>babel</li>\n<li>absolute-path</li>\n<li>styled</li>\n<li>dev-server</li>\n<li>loader</li>\n<li>uglify</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"react-webpack-세팅-하기\" style=\"position:relative;\"><a href=\"#react-webpack-%EC%84%B8%ED%8C%85-%ED%95%98%EA%B8%B0\" aria-label=\"react webpack 세팅 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react webpack 세팅 하기</h1>\n<ul>\n<li>프로젝트 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir webpack-react-tutorial &amp;&amp; cd $_</code></pre></div>\n<ul>\n<li>코드를 작성하기 위한 디렉토리 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir -p src</code></pre></div>\n<ul>\n<li>프로젝트 초기화</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init -y</code></pre></div>\n<h3 id=\"react-webpack-babel-설정-방법-webpack-설정하기\" style=\"position:relative;\"><a href=\"#react-webpack-babel-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95-webpack-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"react webpack babel 설정 방법 webpack 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React, webpack, babel 설정 방법: webpack 설정하기</h3>\n<p><strong>webpack</strong>과 <strong>webpack-cli</strong> 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i webpack webpack-cli --save-dev</code></pre></div>\n<p><code class=\"language-text\">package.json</code> 안에 다음 내용 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode production\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"react-webpack-babel-설정-방법-babel-설정하기\" style=\"position:relative;\"><a href=\"#react-webpack-babel-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95-babel-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"react webpack babel 설정 방법 babel 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React, webpack, babel 설정 방법: babel 설정하기</h3>\n<ul>\n<li><strong>babel preset env</strong>: 모던 자바스크립트를 ES5로 컴파일하기 위해 사용한다.</li>\n<li><strong>babel preset react</strong>: JSX와 기타 내용을 자바스크립트로 컴파일하기 위해 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i @babel/core babel-loader @babel/preset-env @babel/preset-react --save-dev</code></pre></div>\n<p>다음은 babel을 구성한다. <code class=\"language-text\">.babelrc</code> 파일을 프로젝트에 생성 후 아래 코드를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@babel/preset-react\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 최소한의 웹팩 구성을 정의할 준비가 됐다. <code class=\"language-text\">webpack.config.js</code>파일을 만들고 아래 내용을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.(js|jsx)$/</span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token operator\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>js</strong>, <strong>jsx</strong> 확장명을 가진 파일의 코드를 babel-loader를 통해 파이프한다.\n이제 React를 작성할 준비가 되었다.</p>\n<h3 id=\"react-webpack-babel-설정-방법-babel-설정하기-1\" style=\"position:relative;\"><a href=\"#react-webpack-babel-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95-babel-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0-1\" aria-label=\"react webpack babel 설정 방법 babel 설정하기 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React, webpack, babel 설정 방법: babel 설정하기</h3>\n<p>React form을 표시하려면 HTML 페이지를 생성하도록 webpack에 지시해야 한다. 결과 번들은 <code class=\"language-text\">&lt;script&gt;</code>태그 안에 배치된다.\nwebpack은 HTML처리를 위해서 <strong>html-webpack-plugin</strong>과 <strong>html-loader</strong>라는 두가지 추가 컴포넌트가 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i html-webpack-plugin html-loader --save-dev</code></pre></div>\n<p><strong>webpack’s configuration</strong> 업데이트 하기</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> HtmlWebPackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.(js|jsx)$/</span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token operator\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.html$/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            loader<span class=\"token operator\">:</span> <span class=\"token string\">'html-loader'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebPackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.html'</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'./index.html'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">src/index.html</code> HTML 파일을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>How to set up React, Webpack, and Babel<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>React 컴포넌트가 HTML문서에 연결되도록 한다.\n<code class=\"language-text\">src/js/components/Form.js</code>를 열고 파일 맨 아래에 다음 코드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwrapper <span class=\"token operator\">?</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Form <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> wrapper<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>파일을 저장하고 빌드한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run build</code></pre></div>\n<p>dist 폴더 위치에 HTML 결과물이 있어야 한다. 웹팩을 사용하면 HTML파일에 Javascript를 포함할 필요가 없다. <strong>번들은 자동으로 페이지에 injected된다.</strong></p>\n<p><code class=\"language-text\">dist/index.html</code>을 브라우저에서 열면 React 폼을 볼 수 있다.</p>\n<h3 id=\"webpack-dev-server-설정-하기\" style=\"position:relative;\"><a href=\"#webpack-dev-server-%EC%84%A4%EC%A0%95-%ED%95%98%EA%B8%B0\" aria-label=\"webpack dev server 설정 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack dev server 설정 하기</h3>\n<p>파일을 변경할 때 매번 <code class=\"language-text\">npm run build</code>를 입력하기는 번거롭다. development서버를 시작하고 실행하기 위해서 세줄만 작성하면 된다.</p>\n<p><strong>webpack dev server</strong>를 설정하기 위해 다음 명령어로 패키지를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i webpack-dev-server --save-dev</code></pre></div>\n<p><code class=\"language-text\">package.json</code>파일에서 start 스크립트를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-dev-server --open --mode development\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode production\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>저장하고 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm start</code></pre></div>","fields":{"slug":"/posts/til-200325","tagSlugs":["/tag/til/","/tag/webpack/"]},"frontmatter":{"date":"2020-03-25T16:09:32.169Z","description":"TIL_Day58 | webpack 세팅 하기","tags":["TIL","webpack"],"title":"[Wecode] TIL_Day58","socialImage":"https://i.kym-cdn.com/entries/icons/facebook/000/019/513/til.jpg"}}},"pageContext":{"slug":"/posts/til-200325"}}}